# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Category {
  _id: ID
  description: String
  name: String
  products: [ProductsType!]
}

input CategoryInput {
  _id: ID
  description: String
  name: String
  products: [createInputType!]
}

input CustomersInput {
  Token: String
  _id: ID
  email: String
  firstName: String
  image: String
  lastName: String
  password: String
}

type CustomersType {
  Token: String
  _id: ID
  email: String
  firstName: String
  image: String
  lastName: String
  password: String
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Mutation {
  createCategory(category_details: CategoryInput!): Category!
  createCustomer(customer_detail: CustomersInput!): CustomersType!
  createProduct(product_details: createInputType!): ProductsType!
  deleteCategory(id: String!): Category!
  deleteCustomer(id: String!): CustomersType!
  deleteProduct(id: String!): ProductsType!
  login(email: String!, password: String!): User!
  loginCustomer(email: String!, password: String!): CustomersType!
  registerUser(user_details: UserInput!): User!
  updateCategory(category: CategoryInput!, id: String!): Category!
  updateCustomer(customer_detail: CustomersInput!, id: String!): CustomersType!
  updateProduct(id: String!, product: createInputType!): ProductsType!
}

type ProductsType {
  _id: ID!
  availibility: String
  brand: String
  category: Category
  description: String
  discount: Float
  endDate: DateTime
  image: String
  link: String
  name: String
  price: Float
  price_on_discount: Float
  quantity: Float
  startDate: DateTime
  website: String
}

type Query {
  getAziza: [ProductsType!]!
  getCategories: [Category!]!
  getCategory(_id: String!): Category!
  getCustomer(id: String!): CustomersType!
  getCustomerByName(name: String!): CustomersType!
  getCustomerBySearch(name: String!): [CustomersType!]!
  getCustomers: [CustomersType!]!
  getExist: [ProductsType!]!
  getHighestDiscountAziza: [ProductsType!]!
  getHighestDiscountExist: [ProductsType!]!
  getHighestDiscountPointM: [ProductsType!]!
  getHighestDiscountWiki: [ProductsType!]!
  getLowestPrices: [ProductsType!]!
  getPointM: [ProductsType!]!
  getProduct(_id: String!): ProductsType!
  getProducts: [ProductsType!]!
  getProductsByCategory(categoryId: String!): [ProductsType!]!
  getProductsBySearch(productName: String!): [ProductsType!]!
  getScrappedProducts: [Website1!]!
  getWiki: [ProductsType!]!
  scrap: [Website2!]!
  scraper: [Website1!]!
  scraping: [Website2!]!
  scrapingB: [Website2!]!
  scrapingW: [Website2!]!
}

type User {
  _id: ID
  authToken: String
  createdAt: String
  email: String
  firstname: String
  lastname: String
  password: String
  updatedAt: String
}

input UserInput {
  _id: ID
  authToken: String
  createdAt: String
  email: String
  firstname: String
  lastname: String
  password: String
  updatedAt: String
}

type Website1 {
  discount: Float!
  image: String!
  link: String!
  name: String!
  price: Float!
}

type Website2 {
  brand: String
  discount: Float!
  image: String!
  link: String!
  name: String!
  price: Float!
  price_on_discount: Float!
}

input createInputType {
  _id: ID
  availibility: String
  brand: String
  category: CategoryInput
  createdAt: DateTime
  description: String
  discount: Float
  endDate: DateTime
  image: String
  link: String
  name: String
  price: Float
  price_on_discount: Float
  quantity: Float
  startDate: DateTime
  website: String
}